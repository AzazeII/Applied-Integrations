# Set version to 2.1
version: 2.1

executors:
    main_flow_executor:
        docker:
            - image: circleci/openjdk:8-jdk
        working_directory: ~/repo

        environment:
            # Customize the JVM maximum heap limit
            JVM_OPTS: -Xmx3200m
            TERM: dumb
jobs:
    #--- This function (below) will push all caches to workspace of workflow ---#
    download_dependencies:
        executor: main_flow_executor
        parallelism: 4

        steps:
            - checkout

            - run: mkdir -p cache

            # Load caches
            - restore_cache:
                keys:
                    - v1-dependencies-{{ checksum "build.gradle" }}
                    # fallback to using the latest cache if no exact match is found
                    - v1-dependencies-
            # Install
            - run: ./gradlew dependencies # (1) Dependencies
            - run: ./gradlew setupCIWorkspace # (2) CI workspace
            - run: ./gradlew showMeCache

            - save_cache:
                paths:
                    - ~/.gradle
                key: v1-dependencies-{{ checksum "build.gradle" }}

            # Pass cache to next jobs
            - persist_to_workspace:
                # Specify cache
                root: ~/.gradle/caches/
                # Specify everything
                paths:
                    - .
    #--- This function (above) will push all caches to workspace of workflow ---#


    build:
        executor: main_flow_executor
        parallelism: 4

        steps:
            - attach_workspace:
                # Attach cache from workspace
                at: ~/.gradle/caches/

            - checkout
            - run: ./gradlew build

    test:
        executor: main_flow_executor
        parallelism: 4

        steps:
            - attach_workspace:
                  # Attach cache from workspace
                  at: ~/.gradle/caches/

            - checkout
            - run: ./gradlew test

    sonar_test:
        executor: main_flow_executor
        parallelism: 4

        steps:
            - attach_workspace:
                  # Attach cache from workspace
                  at: ~/.gradle/caches/

            - checkout
            - run: ./gradlew sonarqube
                    -Dsonar.host.url=https://sonarcloud.io
                    -Dsonar.organization=${key}
                    -Dsonar.login=${token}
    deploy:
        executor: main_flow_executor
        parallelism: 4

        steps:
            - attach_workspace:
                  # Attach cache from workspace
                  at: ~/.gradle/caches/

            - checkout
        # TODO deploy code here later


workflows:
    version: 2

    # Main flow sequence: Download_dependencies -> Test -> Run                                          False --> Notify me
    #                                           -> Build -> | -> Sonarcloud test -> Notify human tester True ---> Deploy
    main_flow:
        jobs:
            # Run each job in sequence above
            - download_dependencies # (1) dependenceis
            - build: # (2) build code
                requires:
                    - download_dependencies
            - test: # (3) test code
                requires:
                    - download_dependencies
            #- run: # (4) run minecraft with code
            #    requires:
            #        - build
            #        - test
            - sonar_test: # (5) run sonar cloud tests for code
                  requires:
                      - build
                      - test
            -  deploy:
                  type: approval
                  requires:
                      - test
                      - sonar_test

